<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dashboard</name>
    </assembly>
    <members>
        <member name="T:Dashboard.Controllers.AuthController">
            <summary>
            Auth controller
            </summary>
        </member>
        <member name="M:Dashboard.Controllers.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Dashboard.Repository.Interfaces.IUserRepository,Dashboard.Services.BrokerService)">
            <summary>
            Auth controller
            </summary>
        </member>
        <member name="M:Dashboard.Controllers.AuthController.Login(RealTimeComTest.Models.ViewModels.Request.RequestUser)">
            <summary>
            Login route
            </summary>
            <param name="requestUser"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Controllers.AuthController.SignUp(RealTimeComTest.Models.ViewModels.Request.RequestUser,System.String)">
            <summary>
            Sign up
            </summary>
            <param name="requestUser"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Controllers.AuthController.Logout">
            <summary>
            Log Out Route
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Controllers.AuthController.RefreshToken">
            <summary>
            Refresh token for auth
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dashboard.Controllers.RevenueController">
            <summary>
            Revenue Controller
            </summary>
        </member>
        <member name="M:Dashboard.Controllers.RevenueController.#ctor(Dashboard.Repository.Interfaces.IRevenueRepository)">
            <summary>
            Revenue Controller
            </summary>
        </member>
        <member name="M:Dashboard.Controllers.RevenueController.GetProductCostWithIdOrName(System.Nullable{System.Int32},System.String)">
            <summary>
            Get product from id or name
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
            <exception cref="T:Dashboard.Utility.CustomException"></exception>
        </member>
        <member name="M:Dashboard.Controllers.RevenueController.GetAllSearchValuesByPagination(System.Int32,System.Int32)">
            <summary>
            Get All Search Values By Pagination
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Controllers.RevenueController.GetRevenueStatsBasedOnDays(System.String)">
            <summary>
            Get Revenue Stats Based On Days
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="T:Dashboard.Models.Category">
            <summary>
            Represents a category for organizing products.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Category.Id">
            <summary>
            Gets or sets the unique identifier for the category.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Category.CategoryName">
            <summary>
            Gets or sets the name of the category.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Category.Products">
            <summary>
            Gets or sets the collection of products associated with the category.
            </summary>
        </member>
        <member name="T:Dashboard.Models.CustomerSearch">
            <summary>
            Represents a record of a customer's search activity.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.Id">
            <summary>
            Gets or sets the unique identifier for the customer search.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.SearchTerm">
            <summary>
            Gets or sets the search term entered by the customer.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.Count">
            <summary>
            Gets or sets the number of times the customer has searched this term, if available.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.UserId">
            <summary>
            Gets or sets the foreign key for the user who performed the search.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.SearchedAt">
            <summary>
            Gets or sets the date and time when the search was performed.
            </summary>
        </member>
        <member name="P:Dashboard.Models.CustomerSearch.User">
            <summary>
            Gets or sets the user who performed the search.
            </summary>
        </member>
        <member name="T:Dashboard.Models.DTOs.Response.RevenueSPResponse">
            <summary>
            Response type of revenue
            </summary>
        </member>
        <member name="P:Dashboard.Models.DTOs.Response.RevenueSPResponse.CategoryName">
            <summary>
            Category Name
            </summary>
        </member>
        <member name="P:Dashboard.Models.DTOs.Response.RevenueSPResponse.Revenue">
            <summary>
            Total Revenue
            </summary>
        </member>
        <member name="P:Dashboard.Models.DTOs.Response.RevenueSPResponse.Profit">
            <summary>
            Net Profit
            </summary>
        </member>
        <member name="T:Dashboard.Models.Order">
            <summary>
            Represents an order placed by a user.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.Id">
            <summary>
            Gets or sets the unique identifier for the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.UserId">
            <summary>
            Gets or sets the foreign key for the user who placed the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.TotalPrice">
            <summary>
            Gets or sets the total price of the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.Status">
            <summary>
            Gets or sets the status of the order (e.g., Pending, Shipped, Delivered).
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.CreatedAt">
            <summary>
            Gets or sets the creation date of the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.UpdatedAt">
            <summary>
            Gets or sets the last updated date of the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.OrderItems">
            <summary>
            Gets or sets the collection of order items associated with the order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Order.User">
            <summary>
            Gets or sets the user who placed the order.
            </summary>
        </member>
        <member name="T:Dashboard.Models.OrderItem">
            <summary>
            Represents an item in an order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Id">
            <summary>
            Gets or sets the unique identifier for the order item.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.ProductId">
            <summary>
            Gets or sets the foreign key for the product associated with the order item.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.OrderId">
            <summary>
            Gets or sets the foreign key for the order to which the item belongs.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Quantity">
            <summary>
            Gets or sets the quantity of the product ordered.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Price">
            <summary>
            Gets or sets the price of the product at the time of order.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Status">
            <summary>
            Gets or sets the status of the order item, if applicable.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Discount">
            <summary>
            Gets or sets any discount applied to the order item.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.CreatedAt">
            <summary>
            Gets or sets the creation date of the order item record.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Order">
            <summary>
            Gets or sets the order to which the order item belongs.
            </summary>
        </member>
        <member name="P:Dashboard.Models.OrderItem.Product">
            <summary>
            Gets or sets the product associated with the order item.
            </summary>
        </member>
        <member name="T:Dashboard.Models.Product">
            <summary>
            Represents a product in the system.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.Id">
            <summary>
            Gets or sets the unique identifier for the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.Name">
            <summary>
            Gets or sets the name of the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.CostPrice">
            <summary>
            Gets or sets the cost price of the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.SellingPrice">
            <summary>
            Gets or sets the selling price of the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.ShippingCost">
            <summary>
            Gets or sets the shipping cost for the product, if applicable.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.Discount">
            <summary>
            Gets or sets the discount on the product, if any.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.NetProfit">
            <summary>
            Gets or sets the net profit for the product, after discount and shipping costs.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.ThresholdValue">
            <summary>
            Gets or sets the threshold value for reordering stock.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.CategoryId">
            <summary>
            Gets or sets the foreign key for the product's category.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.CurrentStock">
            <summary>
            Gets or sets the current stock level for the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.SupplierId">
            <summary>
            Gets or sets the foreign key for the product's supplier.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.CreatedAt">
            <summary>
            Gets or sets the creation date of the product record.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.UpdatedAt">
            <summary>
            Gets or sets the last update date of the product record.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.Category">
            <summary>
            Gets or sets the category of the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.OrderItems">
            <summary>
            Gets or sets the collection of order items associated with the product.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Product.Supplier">
            <summary>
            Gets or sets the supplier of the product.
            </summary>
        </member>
        <member name="T:Dashboard.Models.Supplier">
            <summary>
            Represents a supplier in the system.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Supplier.Id">
            <summary>
            Gets or sets the unique identifier for the supplier.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Supplier.Name">
            <summary>
            Gets or sets the name of the supplier.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Supplier.ContactInfo">
            <summary>
            Gets or sets the contact information for the supplier.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Supplier.Address">
            <summary>
            Gets or sets the address of the supplier.
            </summary>
        </member>
        <member name="P:Dashboard.Models.Supplier.Products">
            <summary>
            Gets or sets the collection of products provided by the supplier.
            </summary>
        </member>
        <member name="T:Dashboard.Models.User">
            <summary>
            Represents a user in the system.
            </summary>
        </member>
        <member name="P:Dashboard.Models.User.Id">
            <summary>
            Gets or sets the unique identifier for the user.
            </summary>
            <example>1</example>
        </member>
        <member name="P:Dashboard.Models.User.Username">
            <summary>
            Gets or sets the username of the user.
            </summary>
            <example>john_doe</example>
        </member>
        <member name="P:Dashboard.Models.User.Password">
            <summary>
            Gets or sets the password of the user.
            </summary>
            <example>Password@123</example>
        </member>
        <member name="P:Dashboard.Models.User.Role">
            <summary>
            Gets or sets the role of the user.
            </summary>
            <example>admin</example>
        </member>
        <member name="P:Dashboard.Models.User.Email">
            <summary>
            Gets or sets the email address of the user.
            </summary>
            <example>john_doe@example.com</example>
        </member>
        <member name="P:Dashboard.Models.User.LastLogin">
            <summary>
            Gets or sets the last login date and time of the user.
            </summary>
            <example>2024-09-17T15:23:30</example>
        </member>
        <member name="P:Dashboard.Models.User.SessionToken">
            <summary>
            Gets or sets the session token of the user.
            </summary>
            <example>abcd1234sessiontoken</example>
        </member>
        <member name="P:Dashboard.Models.User.TokenExpirationTime">
            <summary>
            Gets or sets the expiration time of the session token.
            </summary>
            <example>2024-09-18T15:23:30</example>
        </member>
        <member name="P:Dashboard.Models.User.IsTokenActive">
            <summary>
            Indicates whether the token is currently active.
            </summary>
            <example>true</example>
        </member>
        <member name="P:Dashboard.Models.User.CreatedAt">
            <summary>
            Gets or sets the date and time when the user was created.
            </summary>
            <example>2023-09-15T10:45:00</example>
        </member>
        <member name="P:Dashboard.Models.User.CustomerSearches">
            <summary>
            Gets or sets the collection of customer searches associated with the user.
            </summary>
        </member>
        <member name="P:Dashboard.Models.User.Orders">
            <summary>
            Gets or sets the collection of orders associated with the user.
            </summary>
        </member>
        <member name="T:Dashboard.Program">
            <summary>
            Program.cs
            </summary>
        </member>
        <member name="M:Dashboard.Program.Main(System.String[])">
            <summary>
            Main Endpoint
            </summary>
            <param name="args"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Dashboard.Repository.Interfaces.IRevenueRepository">
            <summary>
            Revenue Repo Interface
            </summary>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IRevenueRepository.GetProductCostById(System.Int32)">
            <summary>
            Get Product by product id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IRevenueRepository.GetProductCostByName(System.String)">
            <summary>
            Get Product by product name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IRevenueRepository.GetAllSearchValuesByPagination(System.Int32,System.Int32)">
            <summary>
            Get Top search value by page and page size
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IRevenueRepository.GetRevenueStatsBasedOnDays(System.Int32)">
            <summary>
            Get Revenue Stats Based On Days
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="T:Dashboard.Repository.Interfaces.IUserRepository">
            <summary>
            Interface for user repository operations.
            Provides methods for managing user data.
            </summary>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IUserRepository.GetUserByUserName(System.String)">
            <summary>
            Retrieves a user by their username.
            </summary>
            <param name="username">The username of the user to retrieve.</param>
            <returns>The user with the specified username.</returns>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IUserRepository.AddNewUser(Dashboard.Models.User)">
            <summary>
            Adds a new user to the repository.
            </summary>
            <param name="user">The user to add.</param>
        </member>
        <member name="M:Dashboard.Repository.Interfaces.IUserRepository.Save">
            <summary>
            Saves all changes made to the repository.
            </summary>
        </member>
        <member name="T:Dashboard.Repository.RevenueRepository">
            <summary>
            Revenue Repo
            </summary>
            <param name="apiContext"></param>
        </member>
        <member name="M:Dashboard.Repository.RevenueRepository.#ctor(Dashboard.DataContext.ApiContext)">
            <summary>
            Revenue Repo
            </summary>
            <param name="apiContext"></param>
        </member>
        <member name="M:Dashboard.Repository.RevenueRepository.GetProductCostById(System.Int32)">
            <summary>
            Get Product by product id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.RevenueRepository.GetProductCostByName(System.String)">
            <summary>
            Get Product by product name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.RevenueRepository.GetAllSearchValuesByPagination(System.Int32,System.Int32)">
            <summary>
            Get Top search value by page and page size
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Repository.RevenueRepository.GetRevenueStatsBasedOnDays(System.Int32)">
            <summary>
            Get Top 10 Revenue And  Profit
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="T:Dashboard.Repository.UserRepository">
            <summary>
            Repository for managing user data.
            Provides methods for retrieving, adding, and saving users.
            </summary>
            <param name="context">The DbContext instance to use for database operations.</param>
        </member>
        <member name="M:Dashboard.Repository.UserRepository.#ctor(Dashboard.DataContext.ApiContext)">
            <summary>
            Repository for managing user data.
            Provides methods for retrieving, adding, and saving users.
            </summary>
            <param name="context">The DbContext instance to use for database operations.</param>
        </member>
        <member name="M:Dashboard.Repository.UserRepository.GetUserByUserName(System.String)">
            <summary>
            Retrieves a user by their username.
            </summary>
            <param name="username">The username of the user to retrieve.</param>
            <returns>The user with the specified username.</returns>
            <exception cref="T:Dashboard.Utility.CustomException">Thrown when no user with the specified username is found.</exception>
        </member>
        <member name="M:Dashboard.Repository.UserRepository.AddNewUser(Dashboard.Models.User)">
            <summary>
            Adds a new user to the repository.
            </summary>
            <param name="user">The user to add.</param>
            <exception cref="T:Dashboard.Utility.CustomException">Thrown when a user with the specified username already exists.</exception>
        </member>
        <member name="M:Dashboard.Repository.UserRepository.Save">
            <summary>
            Saves all changes made to the repository.
            </summary>
        </member>
        <member name="T:Dashboard.Utility.CustomException">
            <summary>
            Custom Exception class
            </summary>
            <remarks>
            constructor for custom exception
            </remarks>
            <param name="message"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Dashboard.Utility.CustomException.#ctor(System.String,System.Int32)">
            <summary>
            Custom Exception class
            </summary>
            <remarks>
            constructor for custom exception
            </remarks>
            <param name="message"></param>
            <param name="statusCode"></param>
        </member>
        <member name="F:Dashboard.Utility.CustomException.StatusCode">
            <summary>
            Status Code
            </summary>
        </member>
        <member name="F:Dashboard.Utility.CustomException.ErrorMessage">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="T:Dashboard.Utility.Jwt">
            <summary>
            Jwt class with primary constructor y
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Dashboard.Utility.Jwt.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Jwt class with primary constructor y
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Dashboard.Utility.Jwt.GenerateJwtToken(System.Security.Claims.ClaimsIdentity)">
            <summary>
            Generate JWT token with claim idenetity 
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:Dashboard.Utility.Jwt.ValidateJwtToken(System.String)">
            <summary>
            Validate and return token principal
            </summary>
            <param name="token"></param>
            <returns></returns>
            <exception cref="T:Microsoft.IdentityModel.Tokens.SecurityTokenException"></exception>
        </member>
        <member name="T:Dashboard.Utility.Logger">
            <summary>
            Logger Class
            </summary>
        </member>
        <member name="M:Dashboard.Utility.Logger.LogException(System.Exception)">
            <summary>
            Log Exception into LogFile
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:Dashboard.Utility.Validation.ValidationUtility">
            <summary>
            Validation class as utility
            </summary>
        </member>
        <member name="M:Dashboard.Utility.Validation.ValidationUtility.PageInfoValidator(System.Int32,System.Int32)">
            <summary>
            Validate Page Size and Page Number
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:RealTimeComTest.Models.ViewModels.Request.RequestUser">
            <summary>
            user request model
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.ViewModels.Request.RequestUser.Username">
            <summary>
            Username is required and has limit between 2 to 300
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.ViewModels.Request.RequestUser.Password">
            <summary>
            Password is Required 
            </summary>
        </member>
        <member name="T:RealTimeComTest.Models.LoginResponse">
            <summary>
            Login Respose model for session token login response
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.LoginResponse.Username">
            <summary>
            Username is required and has limit between 2 to 300
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.LoginResponse.Role">
            <summary>
            Role of the User
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.LoginResponse.SessionToken">
            <summary>
            Session token
            </summary>
        </member>
        <member name="P:RealTimeComTest.Models.LoginResponse.TokenExpirationTime">
            <summary>
            Token Expiration Time
            </summary>
        </member>
    </members>
</doc>
